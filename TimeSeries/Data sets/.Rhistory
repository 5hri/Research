load("~/R/braatz_data/raw_data.RData")
load("~/R/braatz_data/raw_data.RData")
library(MASS)
install.packages("hdrcde", repos="http://cran.fhcrc.org")
library(hdrcde)
install.packages("mvoutlier")
library(mvoutlier)
row.names(Tcrt1) = c(1:960)
temp = as.matrix(row.names(Tcrt1))
par(mfcol=c(1,2))
for (i in 140:140) {
plot(Tcrt1[,1],Tcrt1[,2],xlim=c(-35,25), ylim=c(-25, 12))
#text(Tcrt1[,1],Tcrt1[,2], row.names(Tcrt1), cex=0.6, pos=4, col="black")
par(new=TRUE)
plot(Tcrt1[i,1],Tcrt1[i,2],xlim=c(-35,25), ylim=c(-25, 12), col="red",lwd = 4)
title(main=i, col.main="red", font.main=4,)
Sys.sleep(0.1)
}
for (i in 1:1) {
plot(Pref[,1],Pref[,2],xlim=c(-0.5,0.5), ylim=c(-0.5, 0.5))
#text(Tcrt1[,1],Tcrt1[,2], row.names(Tcrt1), cex=0.6, pos=4, col="black")
par(new=TRUE)
plot(Pref[i,1],Pref[i,2],xlim=c(-0.5,0.5), ylim=c(-0.5, 0.5), col="red",lwd = 4)
title(main=i, col.main="red", font.main=4)
Sys.sleep(0.1)
}
#loading Plot for faults (eigenvectors are the loadings, determine which var contribute)
plot(eigen(cov(Xcrt1))$vectors)
text(eigen(cov(Xcrt1))$vectors, cnames, cex=0.6, pos=1, col="black")
#identify(eigen(cov(Xcrt1))$vectors)
#Eigenvalues plot for faults (determine # of PC required)
plot(eigen(cov(Xcrt1))$values)
#parallel coord
parcoord(Tcrt1[1:960,],col=rainbow(length(Tcrt1[,1])), var.label=TRUE)
#highest density region
hdr.boxplot.2d(Tcrt[,1],Tcrt[,2],prob=c(68,95,99),show.points = TRUE,
xlab="a", ylab="b", xextend=0.15, yextend=0.15)
identify(hdr.boxplot.2d(Tcrt[,1],Tcrt[,2],prob=c(68,95,99),show.points = TRUE,
xlab="a", ylab="b", xextend=0.15, yextend=0.15))
text(Tcrt1[,1],Tcrt1[,2], row.names(Tcrt1), cex=0.6, pos=1, col="black")
# CUMSUM
plot(cumsum(Tcrt[,1]))
min(cumsum(Tcrt[,1]))
#  spec.pgram(cumsum(diff(Tcrt3[,1]))), acf(cumsum(diff(Tcrt3[,1]))),
# pacf(cumsum(diff(Tcrt3[,1]))),plot.ts(cumsum(diff(Tcrt3[,1])))
for (i in 140:140) {
plot(Tcrt1[,1],Tcrt1[,2],xlim=c(-35,25), ylim=c(-25, 12))
#text(Tcrt1[,1],Tcrt1[,2], row.names(Tcrt1), cex=0.6, pos=4, col="black")
par(new=TRUE)
plot(Tcrt1[i,1],Tcrt1[i,2],xlim=c(-35,25), ylim=c(-25, 12), col="red",lwd = 4)
title(main=i, col.main="red", font.main=4,)
Sys.sleep(0.1)
}
for (i in 140:141) {
plot(Tcrt1[,1],Tcrt1[,2],xlim=c(-35,25), ylim=c(-25, 12))
#text(Tcrt1[,1],Tcrt1[,2], row.names(Tcrt1), cex=0.6, pos=4, col="black")
par(new=TRUE)
plot(Tcrt1[i,1],Tcrt1[i,2],xlim=c(-35,25), ylim=c(-25, 12), col="red",lwd = 4)
title(main=i, col.main="red", font.main=4,)
Sys.sleep(0.1)
}
for (i in 140:150) {
plot(Tcrt1[,1],Tcrt1[,2],xlim=c(-35,25), ylim=c(-25, 12))
#text(Tcrt1[,1],Tcrt1[,2], row.names(Tcrt1), cex=0.6, pos=4, col="black")
par(new=TRUE)
plot(Tcrt1[i,1],Tcrt1[i,2],xlim=c(-35,25), ylim=c(-25, 12), col="red",lwd = 4)
title(main=i, col.main="red", font.main=4,)
Sys.sleep(0.1)
}
for (i in 1:1) {
plot(Pref[,1],Pref[,2],xlim=c(-0.5,0.5), ylim=c(-0.5, 0.5))
#text(Tcrt1[,1],Tcrt1[,2], row.names(Tcrt1), cex=0.6, pos=4, col="black")
par(new=TRUE)
plot(Pref[i,1],Pref[i,2],xlim=c(-0.5,0.5), ylim=c(-0.5, 0.5), col="red",lwd = 4)
title(main=i, col.main="red", font.main=4)
Sys.sleep(0.1)
}
plot(eigen(cov(Xcrt1))$vectors)
text(eigen(cov(Xcrt1))$vectors, cnames, cex=0.6, pos=1, col="black")
#identify(eigen(cov(Xcrt1))$vectors)
eigen(cov(Xcrt1))
plot(eigen(cov(Xcrt1)$values)
)
)
plot(eigen(cov(Xcrt1))$values)
for (i in 150:170) {
plot(Tcrt1[,1],Tcrt1[,2],xlim=c(-35,25), ylim=c(-25, 12))
#text(Tcrt1[,1],Tcrt1[,2], row.names(Tcrt1), cex=0.6, pos=4, col="black")
par(new=TRUE)
plot(Tcrt1[i,1],Tcrt1[i,2],xlim=c(-35,25), ylim=c(-25, 12), col="red",lwd = 4)
title(main=i, col.main="red", font.main=4,)
Sys.sleep(0.1)
}
for (i in 150:180) {
plot(Tcrt1[,1],Tcrt1[,2],xlim=c(-35,25), ylim=c(-25, 12))
#text(Tcrt1[,1],Tcrt1[,2], row.names(Tcrt1), cex=0.6, pos=4, col="black")
par(new=TRUE)
plot(Tcrt1[i,1],Tcrt1[i,2],xlim=c(-35,25), ylim=c(-25, 12), col="red",lwd = 4)
title(main=i, col.main="red", font.main=4,)
Sys.sleep(0.1)
}
for (i in 150:180) {
plot(Tcrt3[,1],Tcrt3[,2],xlim=c(-35,25), ylim=c(-25, 12))
#text(Tcrt1[,1],Tcrt1[,2], row.names(Tcrt1), cex=0.6, pos=4, col="black")
par(new=TRUE)
plot(Tcrt3[i,1],Tcrt3[i,2],xlim=c(-35,25), ylim=c(-25, 12), col="red",lwd = 4)
title(main=i, col.main="red", font.main=4,)
Sys.sleep(0.1)
}
for (i in 150:180) {
plot(Tcrt3[,1],Tcrt3[,2],xlim=c(-10,10), ylim=c(-10, 10))
#text(Tcrt1[,1],Tcrt1[,2], row.names(Tcrt1), cex=0.6, pos=4, col="black")
par(new=TRUE)
plot(Tcrt3[i,1],Tcrt3[i,2],xlim=c(-10,10), ylim=c(-10, 10), col="red",lwd = 4)
title(main=i, col.main="red", font.main=4,)
Sys.sleep(0.1)
}
plot(Tcrt3[,1],Tcrt3[,2],xlim=c(-8,8), ylim=c(-6, 6))
plot(Tcrt3[,1],Tcrt3[,2],xlim=c(-6,6), ylim=c(-6, 6))
plot(Tcrt3[,1],Tcrt3[,2],xlim=c(-7,7), ylim=c(-6, 6))
plot(Tcrt3[,1],Tcrt3[,2],xlim=c(-6.5,6.5), ylim=c(-6, 6))
for (i in 150:180) {
plot(Tcrt3[,1],Tcrt3[,2],xlim=c(-6.5,6.5), ylim=c(-6, 6))
#text(Tcrt1[,1],Tcrt1[,2], row.names(Tcrt1), cex=0.6, pos=4, col="black")
par(new=TRUE)
plot(Tcrt3[i,1],Tcrt3[i,2],xlim=c(-6.5,6.5), ylim=c(-6, 6), col="red",lwd = 4)
title(main=i, col.main="red", font.main=4,)
Sys.sleep(0.1)
}
plot(eigen(cov(Xcrt3))$vectors)
text(eigen(cov(Xcrt3))$vectors, cnames, cex=0.6, pos=1, col="black")
for (i in 150:150) {
plot(Tcrt1[,1],Tcrt1[,2],xlim=c(-35,25), ylim=c(-25, 12))
#text(Tcrt1[,1],Tcrt1[,2], row.names(Tcrt1), cex=0.6, pos=4, col="black")
par(new=TRUE)
plot(Tcrt1[i,1],Tcrt1[i,2],xlim=c(-35,25), ylim=c(-25, 12), col="red",lwd = 4)
title(main=i, col.main="red", font.main=4,)
Sys.sleep(0.1)
}
for (i in 150:200) {
plot(Tcrt1[,1],Tcrt1[,2],xlim=c(-35,25), ylim=c(-25, 12))
#text(Tcrt1[,1],Tcrt1[,2], row.names(Tcrt1), cex=0.6, pos=4, col="black")
par(new=TRUE)
plot(Tcrt1[i,1],Tcrt1[i,2],xlim=c(-35,25), ylim=c(-25, 12), col="red",lwd = 4)
title(main=i, col.main="red", font.main=4,)
Sys.sleep(0.1)
}
for (i in 150:160) {
plot(Tcrt1[,1],Tcrt1[,2],xlim=c(-35,25), ylim=c(-25, 12))
#text(Tcrt1[,1],Tcrt1[,2], row.names(Tcrt1), cex=0.6, pos=4, col="black")
par(new=TRUE)
plot(Tcrt1[i,1],Tcrt1[i,2],xlim=c(-35,25), ylim=c(-25, 12), col="red",lwd = 4)
title(main=i, col.main="red", font.main=4,)
Sys.sleep(0.09)
}
for (i in 150:160) {
plot(Tcrt1[,1],Tcrt1[,2],xlim=c(-35,25), ylim=c(-25, 12))
#text(Tcrt1[,1],Tcrt1[,2], row.names(Tcrt1), cex=0.6, pos=4, col="black")
par(new=TRUE)
plot(Tcrt1[i,1],Tcrt1[i,2],xlim=c(-35,25), ylim=c(-25, 12), col="red",lwd = 4)
title(main=i, col.main="red", font.main=4,)
Sys.sleep(0.009)
}
for (i in 150:160) {
plot(Tcrt1[,1],Tcrt1[,2],xlim=c(-35,25), ylim=c(-25, 12))
#text(Tcrt1[,1],Tcrt1[,2], row.names(Tcrt1), cex=0.6, pos=4, col="black")
par(new=TRUE)
plot(Tcrt1[i,1],Tcrt1[i,2],xlim=c(-35,25), ylim=c(-25, 12), col="red",lwd = 4)
title(main=i, col.main="red", font.main=4,)
Sys.sleep(0.01)
}
for (i in 150:160) {
plot(Tcrt1[,1],Tcrt1[,2],xlim=c(-35,25), ylim=c(-25, 12))
#text(Tcrt1[,1],Tcrt1[,2], row.names(Tcrt1), cex=0.6, pos=4, col="black")
par(new=TRUE)
plot(Tcrt1[i,1],Tcrt1[i,2],xlim=c(-35,25), ylim=c(-25, 12), col="red",lwd = 4)
title(main=i, col.main="red", font.main=4,)
Sys.sleep(0.01)
}
for (i in 150:160) {
plot(Tcrt1[,1],Tcrt1[,2],xlim=c(-35,25), ylim=c(-25, 12))
#text(Tcrt1[,1],Tcrt1[,2], row.names(Tcrt1), cex=0.6, pos=4, col="black")
par(new=TRUE)
plot(Tcrt1[i,1],Tcrt1[i,2],xlim=c(-35,25), ylim=c(-25, 12), col="red",lwd = 4)
title(main=i, col.main="red", font.main=4,)
Sys.sleep(0.1)
}
for (i in 150:300) {
plot(Tcrt1[,1],Tcrt1[,2],xlim=c(-35,25), ylim=c(-25, 12))
#text(Tcrt1[,1],Tcrt1[,2], row.names(Tcrt1), cex=0.6, pos=4, col="black")
par(new=TRUE)
plot(Tcrt1[i,1],Tcrt1[i,2],xlim=c(-35,25), ylim=c(-25, 12), col="red",lwd = 4)
title(main=i, col.main="red", font.main=4,)
Sys.sleep(0.1)
}
# for fault 3
plot(eigen(cov(Xcrt3))$vectors)
text(eigen(cov(Xcrt3))$vectors, cnames, cex=0.6, pos=1, col="black")
for (i in 150:300) {
plot(Tcrt3[,1],Tcrt3[,2],xlim=c(-6.5,6.5), ylim=c(-6, 6))
#text(Tcrt1[,1],Tcrt1[,2], row.names(Tcrt1), cex=0.6, pos=4, col="black")
par(new=TRUE)
plot(Tcrt3[i,1],Tcrt3[i,2],xlim=c(-6.5,6.5), ylim=c(-6, 6), col="red",lwd = 4)
title(main=i, col.main="red", font.main=4,)
Sys.sleep(0.1)
}
huron = read.table("lake.dat")
setwd("~/R/STA137/Data sets")
huron = read.table("lake.dat")
lake = read.table("lake.dat")
lake = ts(lake, start=1875)
t = 1:length(lake)
t
lsfit = lm(lake~t)
lsfit
plot(t, lake, xlab="", ylab="", main="")
lines(lsfit$fit)
lsfit$resid
lines(lsfit$resid)
plot(t, lake, xlab="", ylab="", main="")
lines(lsfit$fit)
lines(lsfit$resid)
lsfit
lsfit$resid
plot(lsfit$resid)
lines(lsfit$resid)
#The moving average filters for this example can be produced in R in the following way:
t = 1:length(lake)
ma2 = filter(lake, sides=2, rep(1,5)/5)
ma10 = filter(lake, sides=2, rep(1,21)/21)
ma35 = filter(lake, sides=2, rep(1,71)/71)
plot(t, ma2, xlab="", ylab="")
lines(ma10); lines(ma35)
lines(ma10)
lines(ma2)
plot(t, ma2, xlab="", ylab="")
lines(ma2)
lines(ma10)
lines(ma35)
plot(t, ma10, xlab="", ylab="")
lines(ma10)
plot(t, ma35, xlab="", ylab="")
plot(t, ma2, xlab="", ylab="")
plot(t, ma2, xlab="", ylab="")
lsfit = lm(ma2~t)
lines(lsfit$fit)
par(mfrow=c(2,3))
plot(t, ma2, xlab="", ylab="")
lsfit = lm(ma2~t)
lines(lsfit$fit)
plot(lsfit$resid)
lines(lsfit$resid)
d1 = diff(lake)
length(lake)
length(d1)
length(d2)
d1 = diff(lake)
d2 = diff(d1)
length(d2)
par(mfrow=c(1,2))
plot.ts(d1, xlab="", ylab="")
plot.ts(d2, xlab="", ylab="")
d1 = diff(lake)
d2 = diff(d1)
d3 = diff(d2)
d4 = diff(d3)
par(mfrow=c(1,4))
plot.ts(d1, xlab="", ylab="")
plot.ts(d2, xlab="", ylab="")
plot.ts(d3, xlab="", ylab="")
plot.ts(d4, xlab="", ylab="")
